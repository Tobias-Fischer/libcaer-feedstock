diff --git a/CMakeLists.txt b/CMakeLists.txt
index ec6ee5c..5b74b02 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,6 +4,12 @@ CMAKE_MINIMUM_REQUIRED(VERSION 3.10.0)
 # Project name and version
 PROJECT(libcaer VERSION 3.3.12 LANGUAGES C CXX)
 
+add_definitions(-D_GNU_SOURCE)
+add_definitions(-D_BSD_SOURCE)
+add_definitions(-D_DEFAULT_SOURCE)
+add_definitions(-D__USE_BSD)
+add_definitions(-D_USE_BSD)
+
 # Basic setup, useful variables, see docs.
 SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmakemod ${CMAKE_MODULE_PATH})
 INCLUDE(inivation-setup)
diff --git a/include/libcaer/portable_endian.h b/include/libcaer/portable_endian.h
index ba1a4b4..75a61db 100644
--- a/include/libcaer/portable_endian.h
+++ b/include/libcaer/portable_endian.h
@@ -56,7 +56,6 @@
 #	define be64toh(x) betoh64(x)
 #	define le64toh(x) letoh64(x)
 #elif defined(__WINDOWS__)
-#	include <sys/param.h>
 #	include <winsock2.h>
 
 #	if BYTE_ORDER == LITTLE_ENDIAN
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 252eed2..ed056ba 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -15,7 +15,11 @@ SET(LIBCAER_SOURCES
 	samsung_evk.c)
 
 # This is often the case due to how we try to have multiple compatible definitions of functions in C.
-SET(LIBCAER_COMPILE_OPTIONS "-Wno-unused-function")
+IF (WIN32)
+	SET(LIBCAER_COMPILE_OPTIONS "")
+ELSE()
+	SET(LIBCAER_COMPILE_OPTIONS "-Wno-unused-function")
+ENDIF()
 
 SET(LIBCAER_LINK_LIBRARIES_PRIVATE PkgConfig::libusb ${BASE_LIBS})
 
diff --git a/src/davis_rpi.c b/src/davis_rpi.c
index 02d9938..53170ea 100644
--- a/src/davis_rpi.c
+++ b/src/davis_rpi.c
@@ -4,6 +4,7 @@
 #include <linux/spi/spidev.h>
 #include <linux/types.h>
 #include <sys/ioctl.h>
+#include <linux/mman.h>
 #include <sys/mman.h>
 #include <unistd.h>
 
diff --git a/src/ringbuffer.c b/src/ringbuffer.c
index 4bd8bbd..3e3a3f1 100644
--- a/src/ringbuffer.c
+++ b/src/ringbuffer.c
@@ -2,7 +2,10 @@
 
 #include "portable_aligned_alloc.h"
 
+#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__)
+#else
 #include <stdalign.h> // To get alignas() macro.
+#endif
 #include <stdatomic.h>
 
 // Alignment specification support (with defines for cache line alignment).
